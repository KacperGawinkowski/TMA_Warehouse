// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TMA_Warehouse.Server;

#nullable disable

namespace TMA_Warehouse.Server.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240323155742_WarehouseMigration")]
    partial class WarehouseMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TMA_Warehouse.Shared.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContantPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceWithoutVAT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitOfMeasurementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("UnitOfMeasurementId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContantPerson = "John Smith",
                            ItemGroupId = 1,
                            Name = "Bricks",
                            PhotoURL = "brick_image.jpg",
                            PriceWithoutVAT = 1m,
                            Quantity = 1000.0,
                            Status = "In Stock",
                            StorageLocation = "Warehouse A, Shelf 1",
                            UnitOfMeasurementId = 1
                        },
                        new
                        {
                            Id = 2,
                            ContantPerson = "John Smith",
                            ItemGroupId = 1,
                            Name = "Cement bags",
                            PhotoURL = "cement_image.jpg",
                            PriceWithoutVAT = 25m,
                            Quantity = 500.0,
                            Status = "In Stock",
                            StorageLocation = "Warehouse A, Shelf 2",
                            UnitOfMeasurementId = 2
                        },
                        new
                        {
                            Id = 3,
                            ContantPerson = "John Smith",
                            ItemGroupId = 1,
                            Name = "Concrete blocks",
                            PhotoURL = "concrete_blocks_image.jpg",
                            PriceWithoutVAT = 5m,
                            Quantity = 800.0,
                            Status = "In Stock",
                            StorageLocation = "Warehouse A, Shelf 3",
                            UnitOfMeasurementId = 1
                        },
                        new
                        {
                            Id = 4,
                            ContantPerson = "Michael Brown",
                            ItemGroupId = 2,
                            Name = "Roofing materials",
                            PhotoURL = "roofing_materials_image.jpg",
                            PriceWithoutVAT = 15m,
                            Quantity = 200.0,
                            Status = "In Stock",
                            StorageLocation = "Warehouse B, Shelf 4",
                            UnitOfMeasurementId = 1
                        },
                        new
                        {
                            Id = 5,
                            ItemGroupId = 1,
                            Name = "Lumber",
                            PriceWithoutVAT = 2m,
                            Quantity = 600.0,
                            Status = "In Stock",
                            UnitOfMeasurementId = 1
                        },
                        new
                        {
                            Id = 6,
                            ItemGroupId = 2,
                            Name = "Nails",
                            PhotoURL = "nails_image.jpg",
                            PriceWithoutVAT = 0.15m,
                            Quantity = 5000.0,
                            Status = "In Stock",
                            UnitOfMeasurementId = 1
                        },
                        new
                        {
                            Id = 7,
                            ContantPerson = "Michael Brown",
                            ItemGroupId = 2,
                            Name = "Paint",
                            PhotoURL = "paint_image.jpg",
                            PriceWithoutVAT = 20m,
                            Quantity = 100.0,
                            Status = "In Stock",
                            StorageLocation = "Warehouse B, Shelf 2",
                            UnitOfMeasurementId = 1
                        },
                        new
                        {
                            Id = 8,
                            ContantPerson = "Michael Brown",
                            ItemGroupId = 2,
                            Name = "Drywall sheets",
                            PriceWithoutVAT = 17.5m,
                            Quantity = 300.0,
                            Status = "In Stock",
                            StorageLocation = "Warehouse B, Shelf 3",
                            UnitOfMeasurementId = 1
                        },
                        new
                        {
                            Id = 9,
                            ContantPerson = "Olivia Anderson",
                            ItemGroupId = 1,
                            Name = "Insulation",
                            PriceWithoutVAT = 35m,
                            Quantity = 400.0,
                            Status = "In Stock",
                            StorageLocation = "Warehouse A, Shelf 4",
                            UnitOfMeasurementId = 1
                        },
                        new
                        {
                            Id = 10,
                            ItemGroupId = 2,
                            Name = "Plumbing fixtures",
                            PhotoURL = "plumbing_fixtures_image.jpg",
                            PriceWithoutVAT = 150m,
                            Quantity = 50.0,
                            Status = "In Stock",
                            StorageLocation = "Warehouse B, Shelf 5",
                            UnitOfMeasurementId = 1
                        },
                        new
                        {
                            Id = 11,
                            ContantPerson = "Olivia Anderson",
                            ItemGroupId = 2,
                            Name = "Electrical wiring",
                            PhotoURL = "electrical_wiring_image.jpg",
                            PriceWithoutVAT = 7.49m,
                            Quantity = 2000.0,
                            Status = "In Stock",
                            UnitOfMeasurementId = 1
                        });
                });

            modelBuilder.Entity("TMA_Warehouse.Shared.Models.ItemGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Group_1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Group_2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Group_3"
                        });
                });

            modelBuilder.Entity("TMA_Warehouse.Shared.Models.UnitOfMeasurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnitsOfMeasurements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Unit"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kilograms"
                        });
                });

            modelBuilder.Entity("TMA_Warehouse.Shared.Models.Item", b =>
                {
                    b.HasOne("TMA_Warehouse.Shared.Models.ItemGroup", "ItemGroup")
                        .WithMany()
                        .HasForeignKey("ItemGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMA_Warehouse.Shared.Models.UnitOfMeasurement", "UnitOfMeasurement")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemGroup");

                    b.Navigation("UnitOfMeasurement");
                });
#pragma warning restore 612, 618
        }
    }
}
